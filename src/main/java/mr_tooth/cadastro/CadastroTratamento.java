package mr_tooth.cadastro;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import mr_tooth.utilitarios.ConectaBanco;
/**
 *
 * @author pedroh
 */
public class CadastroTratamento extends javax.swing.JFrame {
    ConectaBanco con_usuario;
    /** Creates new form CadastroTratamento */
    public CadastroTratamento() {
        initComponents();
        con_usuario = new ConectaBanco();
        con_usuario.OpenDB();
        con_usuario.QuerySQL("SELECT * FROM tratamentos");

        try{
            con_usuario.rs.first();
            txtCodigo.setText(con_usuario.rs.getString("cod_tratamento"));
            txtNome.setText(con_usuario.rs.getString("nome_tra"));
            txtDesc.setText(con_usuario.rs.getString("descricao_tra"));
            txtValor.setText(con_usuario.rs.getString("valor_tra"));
        }
        catch(SQLException erroSQL){
             JOptionPane.showMessageDialog(null,"Nenhum tratamento cadastrado","Tratamentoss", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    public void AtualizaRs(){
        try{
            con_usuario.rs = con_usuario.stmt.executeQuery("SELECT * FROM tratamentos");
            con_usuario.rs.first();
            txtCodigo.setText(con_usuario.rs.getString("cod_tratamento"));
            txtNome.setText(con_usuario.rs.getString("nome_tra"));
            txtDesc.setText(con_usuario.rs.getString("descricao_tra"));
            txtValor.setText(con_usuario.rs.getString("valor_tra"));
        }
        catch(SQLException erroSQL){
             JOptionPane.showMessageDialog(null,"Não foi possível atualizar os registros", "Erro!", JOptionPane.ERROR_MESSAGE);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNome = new javax.swing.JLabel();
        lblDesc = new javax.swing.JLabel();
        lblValor = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtValor = new javax.swing.JTextField();
        btnSalvar = new javax.swing.JButton();
        lblCodigo = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        btnProximo = new javax.swing.JButton();
        btnAnterior = new javax.swing.JButton();
        btnNovo = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnUltimo = new javax.swing.JButton();
        btnPrimeiro = new javax.swing.JButton();
        lblPesquisa = new javax.swing.JLabel();
        txtPesquisa = new javax.swing.JTextField();
        btnPesquisa = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDesc = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tratamentos");

        lblNome.setText("Nome: ");

        lblDesc.setText("Descrição:");

        lblValor.setText("Valor:");

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mr_tooth/icones/Treatment Completed.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        lblCodigo.setText("Código:");

        txtCodigo.setEditable(false);

        btnProximo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mr_tooth/icones/Proximo_16x16.png"))); // NOI18N
        btnProximo.setText("Próximo");
        btnProximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProximoActionPerformed(evt);
            }
        });

        btnAnterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mr_tooth/icones/Anterior_16x16.png"))); // NOI18N
        btnAnterior.setText("Anterior");
        btnAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnteriorActionPerformed(evt);
            }
        });

        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mr_tooth/icones/Treatment Add.png"))); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mr_tooth/icones/Treatment Plan.png"))); // NOI18N
        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mr_tooth/icones/Treatment Delete.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnUltimo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mr_tooth/icones/Ultimo_16x16.png"))); // NOI18N
        btnUltimo.setText("Último");
        btnUltimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUltimoActionPerformed(evt);
            }
        });

        btnPrimeiro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mr_tooth/icones/Primeiro_16x16.png"))); // NOI18N
        btnPrimeiro.setText("Primeiro");
        btnPrimeiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrimeiroActionPerformed(evt);
            }
        });

        lblPesquisa.setText("Pesquisa :");

        btnPesquisa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mr_tooth/icones/Treatment View.png"))); // NOI18N
        btnPesquisa.setText("Pesquisar");
        btnPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaActionPerformed(evt);
            }
        });

        txtDesc.setColumns(20);
        txtDesc.setRows(5);
        jScrollPane1.setViewportView(txtDesc);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNome)
                            .addComponent(lblDesc)
                            .addComponent(lblCodigo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 483, Short.MAX_VALUE)
                            .addComponent(txtNome, javax.swing.GroupLayout.DEFAULT_SIZE, 483, Short.MAX_VALUE)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 483, Short.MAX_VALUE))
                        .addGap(10, 10, 10))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblPesquisa)
                        .addGap(18, 18, 18)
                        .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPesquisa, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 595, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPrimeiro, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNovo, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                    .addComponent(btnAnterior, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                    .addComponent(btnProximo, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnUltimo, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                    .addComponent(btnExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblValor)
                .addGap(42, 42, 42)
                .addComponent(txtValor, javax.swing.GroupLayout.DEFAULT_SIZE, 483, Short.MAX_VALUE)
                .addGap(22, 22, 22))
            .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 595, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPesquisa)
                    .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCodigo)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNome)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDesc)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblValor)
                    .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPrimeiro, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                    .addComponent(btnUltimo, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                    .addComponent(btnAnterior, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                    .addComponent(btnProximo, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNovo, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(btnAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE))
                .addGap(31, 31, 31))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-597)/2, (screenSize.height-530)/2, 597, 530);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        try{
            String nome  = txtNome.getText();
            String desc  = txtDesc.getText();
            String valor = txtValor.getText();

            //Inseri os dados no banco
            String UsuarioInsert = "INSERT INTO tratamentos () VALUES (NULL,'"+nome+"','"+desc+"','"+valor+"')";
            con_usuario.stmt.execute(UsuarioInsert);
            JOptionPane.showMessageDialog(null,"Tratamento cadastrado com sucesso!","Cadastrado!", JOptionPane.INFORMATION_MESSAGE);
            //Atualiza ResultSet
            AtualizaRs();
         }
         catch(SQLException erroSQL){
            JOptionPane.showMessageDialog(null,"Não foi possível cadastrar o tratamento!", "Erro!", JOptionPane.ERROR_MESSAGE);
            //Atualiza ResultSet
            AtualizaRs();
        }
}//GEN-LAST:event_btnSalvarActionPerformed

    private void btnProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProximoActionPerformed
        try{
            con_usuario.rs.next();
            txtCodigo.setText(con_usuario.rs.getString("cod_tratamento"));
            txtNome.setText(con_usuario.rs.getString("nome_tra"));
            txtDesc.setText(con_usuario.rs.getString("descricao_tra"));
            txtValor.setText(con_usuario.rs.getString("valor_tra"));
        } catch(SQLException erroSQL){
            JOptionPane.showMessageDialog(null,"Ops! este é o último registro!", "Erro!", JOptionPane.ERROR_MESSAGE);
        }
}//GEN-LAST:event_btnProximoActionPerformed

    private void btnAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnteriorActionPerformed
        try{
            con_usuario.rs.previous();
            txtCodigo.setText(con_usuario.rs.getString("cod_tratamento"));
            txtNome.setText(con_usuario.rs.getString("nome_tra"));
            txtDesc.setText(con_usuario.rs.getString("descricao_tra"));
            txtValor.setText(con_usuario.rs.getString("valor_tra"));
        } catch(SQLException erroSQL){
            JOptionPane.showMessageDialog(null,"Ops! este é o primeiro registro!", "Erro!", JOptionPane.ERROR_MESSAGE);
        }
}//GEN-LAST:event_btnAnteriorActionPerformed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        txtCodigo.setText("");
        txtNome.setText("");
        txtValor.setText("");
        txtDesc.setText("");
        txtNome.requestFocus();
}//GEN-LAST:event_btnNovoActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        try{
            String cod   = txtCodigo.getText();
            String nome  = txtNome.getText();
            String desc  = txtDesc.getText();
            String valor = txtValor.getText();
           
            //Atualiza os dados no banco
            String UsuarioUpdate = "UPDATE tratamentos SET nome_tra = '"+nome+"', descricao_tra = '"+desc+"', valor_tra = '"+valor+"' WHERE cod_tratamento = "+cod;
            con_usuario.stmt.executeUpdate(UsuarioUpdate);
            JOptionPane.showMessageDialog(null,"Tratamento atualizado com sucesso!","Atualização!", JOptionPane.INFORMATION_MESSAGE);
            //Atualiza ResultSet
            AtualizaRs();
         }
         catch(SQLException erroSQL){
            JOptionPane.showMessageDialog(null,"Não foi possível atualizar os dados do tratamento! , "+erroSQL, "Erro!", JOptionPane.ERROR_MESSAGE);
            //Atualiza ResultSet
            AtualizaRs();
        }
}//GEN-LAST:event_btnAlterarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        String codigoTratamento = txtCodigo.getText();
        try{
            //Busca no banco de dados o código do usuário selecionado para ser excluido
            String TratamentoSelecionado = "SELECT * FROM tratamentos WHERE cod_tratamento = '"+codigoTratamento+"'";
            con_usuario.QuerySQL(TratamentoSelecionado);
            con_usuario.rs.next();

            //Mensagem de confirmação
            String MsgConfirmacao = "Deseja realmente excluir o tratamento: "+con_usuario.rs.getString("nome_tra")+" ?";
            int OpcaoEscolhida = JOptionPane.showConfirmDialog(null, MsgConfirmacao, "Excluir", JOptionPane.YES_NO_OPTION);

            if(OpcaoEscolhida == JOptionPane.YES_OPTION){
                //Excluindo o usuário após a confirmação positiva
                String ExcluirTratamento = "DELETE FROM tratamentos WHERE cod_tratamento = '"+codigoTratamento+"'";
                int ExcluirSucesso  = con_usuario.stmt.executeUpdate(ExcluirTratamento);

                if(ExcluirSucesso == 1){
                    JOptionPane.showMessageDialog(null,"Tratamento excluido com sucesso!","Excluir!", JOptionPane.INFORMATION_MESSAGE);
                    //Atualiza ResultSet
                    AtualizaRs();
                } else{
                    JOptionPane.showMessageDialog(null,"Não foi possível excluir o tratamento!", "Erro!", JOptionPane.ERROR_MESSAGE);
                    //Atualiza ResultSet
                    AtualizaRs();
                }
            } else{
                //Atualiza ResultSet
                AtualizaRs();
                return;
            }
        } catch(Exception erroSQL){
            JOptionPane.showMessageDialog(null,"Erro ao excluir", "Erro!", JOptionPane.ERROR_MESSAGE);
        }
}//GEN-LAST:event_btnExcluirActionPerformed

    private void btnUltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUltimoActionPerformed
        try{
            con_usuario.rs.last();
            txtCodigo.setText(con_usuario.rs.getString("cod_tratamento"));
            txtNome.setText(con_usuario.rs.getString("nome_tra"));
            txtDesc.setText(con_usuario.rs.getString("descricao_tra"));
            txtValor.setText(con_usuario.rs.getString("valor_tra"));
        } catch(SQLException erroSQL){
            JOptionPane.showMessageDialog(null,"Ops! este é o último registro!", "Erro!", JOptionPane.ERROR_MESSAGE);
        }
}//GEN-LAST:event_btnUltimoActionPerformed

    private void btnPrimeiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrimeiroActionPerformed
        try{
            con_usuario.rs.first();
            txtCodigo.setText(con_usuario.rs.getString("cod_tratamento"));
            txtNome.setText(con_usuario.rs.getString("nome_tra"));
            txtDesc.setText(con_usuario.rs.getString("descricao_tra"));
            txtValor.setText(con_usuario.rs.getString("valor_tra"));
        } catch(SQLException erroSQL){
            JOptionPane.showMessageDialog(null,"Ops! este é o primeiro registro!", "Erro!", JOptionPane.ERROR_MESSAGE);
        }
        //con_usuario.CloseDB();
}//GEN-LAST:event_btnPrimeiroActionPerformed

    private void btnPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaActionPerformed
        try{
            con_usuario.rs.first();
            String Igual = "nao";
            int TamanhoPesquisa = txtPesquisa.getText().length();

            while(Igual == "nao"){
                String Pesquisado = con_usuario.rs.getString("nome_tra").substring(0,(TamanhoPesquisa));
                if(Pesquisado.equals(txtPesquisa.getText())){
                    Igual = "sim";
                } else{
                    con_usuario.rs.next();
                }
            }
            //Mostra os dados pesquisados
            txtCodigo.setText(con_usuario.rs.getString("cod_tratamento"));
            txtNome.setText(con_usuario.rs.getString("nome_tra"));
            txtDesc.setText(con_usuario.rs.getString("descricao_tra"));
            txtValor.setText(con_usuario.rs.getString("valor_tra"));
        } catch(Exception erroPesquisa){
            JOptionPane.showMessageDialog(null,"Não foi possivel localizar este tratamento", "Erro!", JOptionPane.ERROR_MESSAGE);
        }
}//GEN-LAST:event_btnPesquisaActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroTratamento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnAnterior;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnPesquisa;
    private javax.swing.JButton btnPrimeiro;
    private javax.swing.JButton btnProximo;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnUltimo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblDesc;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblPesquisa;
    private javax.swing.JLabel lblValor;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextArea txtDesc;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtPesquisa;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables

}
