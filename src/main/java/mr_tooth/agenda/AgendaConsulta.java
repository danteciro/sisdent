package mr_tooth.agenda;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import mr_tooth.utilitarios.*;
/**
 *
 * @author Pedro
 */
public class AgendaConsulta extends javax.swing.JFrame {
    ConectaBanco con_agenda;
    /** Creates new form AgendaConsulta */
    public AgendaConsulta() {
        initComponents();
        //Inicia a classe ConectaBanco
        con_agenda = new ConectaBanco();
        con_agenda.OpenDB();

        //Carrega os dados do banco nos Combox
        this.CarregarCbPaciente();
        this.CarregarCbDentista();
        this.CarregarCbTratamento();
    }

    public void CarregarCbPaciente(){
        //Adiciona os pacientes cadastrados no cbPaciente
        con_agenda.QuerySQL("SELECT cod_paciente,nome_pac FROM pacientes");
        try{
            while(con_agenda.rs.next()){
                cbPaciente.addItem(con_agenda.rs.getString("nome_pac"));
            }
        }
        catch(Exception erroPaciente){
            JOptionPane.showMessageDialog(null,"Erro ao carregar os pacientes cadastrados !", "Erro!", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void CarregarCbDentista(){
        //Adiciona os dentistas cadastrados no cbDentista
        con_agenda.QuerySQL("SELECT cod_dentista,nome_dent FROM dentistas");
        try{
            while(con_agenda.rs.next()){
                cbDentista.addItem(con_agenda.rs.getString("nome_dent"));
            }
        }
        catch(Exception erroDentista){
            JOptionPane.showMessageDialog(null,"Erro ao carregar os dentistas cadastrados !", "Erro!", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void CarregarCbTratamento(){
        //Adiciona os tratamentos cadastrados no cbTratamento
        con_agenda.QuerySQL("SELECT cod_tratamento,nome_tra FROM tratamentos");
        try{
            while(con_agenda.rs.next()){
                cbTratamento.addItem(con_agenda.rs.getString("nome_tra"));
            }
        }
        catch(Exception erroTratamento){
            JOptionPane.showMessageDialog(null,"Erro ao carregar os tratamentos cadastrados !", "Erro!", JOptionPane.ERROR_MESSAGE);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDtConsulta = new javax.swing.JLabel();
        cbData = new CalendarComboBox(true);
        lbHrConsulta = new javax.swing.JLabel();
        txtHora = new javax.swing.JFormattedTextField();
        lblPaciente = new javax.swing.JLabel();
        lblDentista = new javax.swing.JLabel();
        cbPaciente = new javax.swing.JComboBox();
        cbDentista = new javax.swing.JComboBox();
        lblObs = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtObs = new javax.swing.JTextArea();
        lblTratamento = new javax.swing.JLabel();
        cbTratamento = new javax.swing.JComboBox();
        btnCancelar = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Agendar Consulta");

        lblDtConsulta.setFont(new java.awt.Font("Segoe UI", 1, 12));
        lblDtConsulta.setText("Data da Consulta :");

        cbData.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cbDataFocusLost(evt);
            }
        });

        lbHrConsulta.setFont(new java.awt.Font("Segoe UI", 1, 12));
        lbHrConsulta.setText("Hora da Consulta :");

        txtHora.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));

        lblPaciente.setText("Nome do Paciente :");

        lblDentista.setText("Nome do Dentista :");

        cbPaciente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione o paciente" }));
        cbPaciente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cbPacienteFocusLost(evt);
            }
        });

        cbDentista.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione o dentista que irá atender" }));

        lblObs.setText("Observação :");

        txtObs.setColumns(20);
        txtObs.setRows(5);
        jScrollPane1.setViewportView(txtObs);

        lblTratamento.setText("Tratamento :");

        cbTratamento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione o tratamento que será realizado" }));
        cbTratamento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cbTratamentoFocusLost(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mr_tooth/icones/Calendar Stop.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mr_tooth/icones/Calendar Confirmed.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblObs)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblDtConsulta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbData, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(lbHrConsulta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPaciente)
                            .addComponent(lblDentista)
                            .addComponent(lblTratamento))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbTratamento, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)
                            .addComponent(cbDentista, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbPaciente, 0, 443, Short.MAX_VALUE))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDtConsulta)
                    .addComponent(lbHrConsulta)
                    .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(lblPaciente)
                    .addComponent(cbPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDentista)
                    .addComponent(cbDentista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblObs))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTratamento)
                    .addComponent(cbTratamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnSalvar))
                .addGap(59, 59, 59))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-627)/2, (screenSize.height-511)/2, 627, 511);
    }// </editor-fold>//GEN-END:initComponents

    private void cbTratamentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbTratamentoFocusLost
       
    }//GEN-LAST:event_cbTratamentoFocusLost

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
               
        try{            
            String hora = txtHora.getText();
            String obs  = txtObs.getText();

            //Inseri os dados no banco
            String AgendaInsert = "INSERT INTO agenda () VALUES (NULL,'"+((CalendarComboBox) cbData).getText()+"','"+hora+"','"+cbPaciente.getSelectedItem()+"','"+cbDentista.getSelectedItem()+"','"+obs+"','"+cbTratamento.getSelectedItem()+"',NULL)";
            con_agenda.stmt.execute(AgendaInsert);
            JOptionPane.showMessageDialog(null,"Consulta agendada com sucesso!","Cadastrado!", JOptionPane.INFORMATION_MESSAGE);
        }
        catch(SQLException erroSQL){
             JOptionPane.showMessageDialog(null,"Não foi possível agendar a consulta!" +erroSQL, "Erro!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void cbDataFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbDataFocusLost
      
    }//GEN-LAST:event_cbDataFocusLost

    private void cbPacienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbPacienteFocusLost
      
    }//GEN-LAST:event_cbPacienteFocusLost

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AgendaConsulta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox cbData;
    private javax.swing.JComboBox cbDentista;
    private javax.swing.JComboBox cbPaciente;
    private javax.swing.JComboBox cbTratamento;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbHrConsulta;
    private javax.swing.JLabel lblDentista;
    private javax.swing.JLabel lblDtConsulta;
    private javax.swing.JLabel lblObs;
    private javax.swing.JLabel lblPaciente;
    private javax.swing.JLabel lblTratamento;
    private javax.swing.JFormattedTextField txtHora;
    private javax.swing.JTextArea txtObs;
    // End of variables declaration//GEN-END:variables

}
